# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.4-stretch
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

      - image: circleci/postgres:latest
        environment:
          POSTGRES_USER: qbotsql
          POSTGRES_DB: qbottest
          POSTGRES_PASSWORD: ""

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -U pytest
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: install psql
          command: |
            sudo apt update
            sudo apt install postgresql-client

      - run:
          name: wait for postgres..
          command: sleep 2

      - run:
          name: apply schema
          command: psql -d qbottest -U qbotsql < schema.sql
          environment:
            PGHOST: localhost
            PGPORT: 5432
        
      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            cp .circleci/queuebot_config.py config.py
            export PYTHONPATH=$PYTHONPATH:$(pwd)
            pytest -vs

      - store_artifacts:
          path: test-reports
          destination: test-reports
          
